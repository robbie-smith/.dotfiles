# -s flag checks that the file is > 0 bytes
[[ -s "$HOME/.bashrc" ]] && source "$HOME/.bashrc"
[[ -s "$HOME/.profile" ]] && source "$HOME/.profile"

function gpush() {
  BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
  git push -u origin "${BRANCH}"
}

function pr()
{
  # hub pull-request -l "Needs Code Review,Needs Testing,#squad-insights" -o
  hub pull-request -o
}

function compare() {
  hub compare `git rev-parse --abbrev-ref HEAD`
}

# Colorized man command
man() {
  env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m") \
    LESS_TERMCAP_md=$(printf "\e[1;31m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;32m") \
    man "$@"
}

activate(){
  if [ -d $(pwd)/$1 ]; then
    source $(pwd)/$1/bin/activate
  fi
}

test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"
rotate() {
  pyenv local 3.6.9
  env=${1}
  aws-jumpcloud rotate guild-${env}
  echo "[default]" > ~/.aws/credentials
  aws-jumpcloud export guild-${env} | sed -n -e '1 p' -e '2 p' -e '4 p' >> ~/.aws/credentials
  sed -i '' -e 's/export //g' -e 's/"//g' -e 's/AWS_ACCESS_KEY_ID=/aws_access_key_id = /g' -e 's/AWS_SESSION_TOKEN=/aws_session_token = /g' -e 's/AWS_SECRET_ACCESS_KEY=/aws_secret_access_key = /g' ~/.aws/credentials
  pyenv local --unset
  pyenv local 3.7.0
  }

eval "$(rbenv init -)"
# eval "$(pyenv init -)"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/Users/robertsmith/.sdkman"
[[ -s "/Users/robertsmith/.sdkman/bin/sdkman-init.sh" ]] && source "/Users/robertsmith/.sdkman/bin/sdkman-init.sh"

[ -s "/Users/robertsmith/.jabba/jabba.sh" ] && source "/Users/robertsmith/.jabba/jabba.sh"
export PATH="/usr/local/sbin:$PATH"
. "$HOME/.cargo/env"
