export BASH_SILENCE_DEPRECATION_WARNING=1
export EDITOR=nvim
export PATH=$HOME/.local/bin:$PATH
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="/usr/local/Cellar:$PATH"
export PATH="/usr/local/bin:$PATH"
export PATH="/usr/local/opt/postgresql@9.5/bin:$PATH"
export PATH=$PATH.~/.rbenv/shims
export PATH=/Applications/SnowSQL.app/Contents/MacOS:$PATH
export PATH=/Applications/Postgres.app/Contents/Versions/12/bin:$PATH
export JAVA_HOME="$(/usr/libexec/java_home -v 1.8)"
export GOPATH=$HOME/Go
export GOROOT=/usr/local/opt/go/libexec
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:$GOROOT/bin
export PYTEST_ADDOPTS='-s'
export CLICOLOR=1
export TERM=xterm-256color
export LSCOLORS=GxFxCxDxBxegedabagaced
export CLICOLOR=1
export TERM=xterm-256color
export LSCOLORS=GxFxCxDxBxegedabagaced
export SCALA_HOME="/usr/local/opt/scala/idea"
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
bind 'set show-all-if-ambiguous on'
bind 'set completion-ignore-case on'
bind 'TAB:menu-complete'
export HISTCONTROL=ignoreboth
source ~/.dotfiles/bash_base_config/fzf_profile.sh
source ~/.dotfiles/bash_base_config/git_prompt.sh
source ~/.dotfiles/bash_base_config/prompt.sh
source ~/.dotfiles/bash_base_config/aliases.sh
export LDFLAGS="-L/usr/local/opt/libpq/lib"
export CPPFLAGS="-I/usr/local/opt/libpq/include"
export PATH="/usr/local/opt/libpq/bin:$PATH"
export PKG_CONFIG_PATH="/usr/local/opt/libpq/lib/pkgconfig"
export HOMEBREW_CELLAR="/usr/local/Cellar"
export SPARK_HOME=$HOMEBREW_CELLAR/apache-spark/3.5.1/libexec
export PATH="$JAVA_HOME:$SPARK_HOME:$PATH"
export DOCKER_CLI_HINTS=false
export PATH=$PATH:$HOME/.toolbox/bin
export PATH="/usr/local/sbin:$PATH"
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

function docker_clean {
  docker rmi $(docker images -f "dangling=true" -q -f)
}

if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

. "$HOME/.cargo/env"

function gpush() {
  BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
  git push -u origin "${BRANCH}"
}

function pr()
{
  # hub pull-request -l "Needs Code Review,Needs Testing,#squad-insights" -o
  hub pull-request -o
}



function compare() {
  hub compare `git rev-parse --abbrev-ref HEAD`
}

# Colorized man command
man() {
  env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m") \
    LESS_TERMCAP_md=$(printf "\e[1;31m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;32m") \
    man "$@"
}

activate(){
  if [ -d $(pwd)/$1 ]; then
    source $(pwd)/$1/bin/activate
  fi
}

test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"


export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

if [ -f /sw/etc/bash_completion ]; then
   . /sw/etc/bash_completion
fi

. "$HOME/.cargo/env"
eval "$(starship init bash)" 2> /dev/null
# eval "$(pyenv init --path)"
# eval "$(rbenv init -)"
# eval "$(mise activate bash)"
eval "$(/opt/homebrew/bin/brew shellenv)"
